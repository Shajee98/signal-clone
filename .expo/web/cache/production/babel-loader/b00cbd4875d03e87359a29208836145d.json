{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useLayoutEffect,useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{Input,Button}from'react-native-elements';import Icon from\"@expo/vector-icons/FontAwesome\";import{db}from\"../firbase\";var AddChatScreen=function AddChatScreen(_ref){var navigation=_ref.navigation;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];useLayoutEffect(function(){navigation.setOptions({title:\"Add a new chat\",headerBackTitle:\"Chats\"});},[navigation]);var createChat=function createChat(){db.collection('chats').add({ChatName:input}).then(function(){navigation.goBack();}).catch(function(error){return alert(error);});};return React.createElement(View,{style:styles.container},React.createElement(Input,{placeholder:\"Enter a chat name\",value:input,onChangeText:function onChangeText(chat){return setInput(chat);},onSubmitEditing:createChat,leftIcon:React.createElement(Icon,{name:\"wechat\",type:\"antdesign\",size:24,color:\"grey\"})}),React.createElement(Button,{disabled:!input,title:\"Create new Chat\",onPress:createChat}));};export default AddChatScreen;var styles=StyleSheet.create({container:{backgroundColor:\"white\",padding:30,height:\"100%\"}});","map":{"version":3,"sources":["/home/shajee/Desktop/signal-clone/Screens/AddChatScreen.js"],"names":["React","useLayoutEffect","useState","Input","Button","Icon","db","AddChatScreen","navigation","input","setInput","setOptions","title","headerBackTitle","createChat","collection","add","ChatName","then","goBack","catch","error","alert","styles","container","chat","StyleSheet","create","backgroundColor","padding","height"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,eAAhB,CAAiCC,QAAjC,KAAiD,OAAjD,C,2KAEA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,uBAA9B,CACA,MAAOC,CAAAA,IAAP,sCACA,OAASC,EAAT,kBAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAhBC,CAAAA,UAAgB,MAAhBA,UAAgB,CACpC,cAA0BN,QAAQ,CAAC,EAAD,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eACAT,eAAe,CAAC,UAAM,CAClBO,UAAU,CAACG,UAAX,CAAsB,CAClBC,KAAK,CAAE,gBADW,CAElBC,eAAe,CAAE,OAFC,CAAtB,EAIH,CALc,CAKb,CAACL,UAAD,CALa,CAAf,CAOA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACjBR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,CAC3BC,QAAQ,CAAER,KADiB,CAA3B,EAEDS,IAFC,CAEI,UAAM,CACVV,UAAU,CAACW,MAAX,GACH,CAJG,EAIDC,KAJC,CAIK,SAACC,KAAD,QAAWC,CAAAA,KAAK,CAACD,KAAD,CAAhB,EAJL,EAKP,CAND,CAOA,MACI,qBAAC,IAAD,EAAM,KAAK,CAAEE,MAAM,CAACC,SAApB,EACA,oBAAC,KAAD,EAAO,WAAW,CAAC,mBAAnB,CACO,KAAK,CAAEf,KADd,CAEO,YAAY,CAAE,sBAACgB,IAAD,QAAUf,CAAAA,QAAQ,CAACe,IAAD,CAAlB,EAFrB,CAGO,eAAe,CAAEX,UAHxB,CAIO,QAAQ,CACJ,oBAAC,IAAD,EAAM,IAAI,CAAC,QAAX,CAAoB,IAAI,CAAC,WAAzB,CAAqC,IAAI,CAAE,EAA3C,CAA+C,KAAK,CAAC,MAArD,EALX,EADA,CAQO,oBAAC,MAAD,EAAQ,QAAQ,CAAE,CAACL,KAAnB,CAA0B,KAAK,CAAC,iBAAhC,CAAkD,OAAO,CAAEK,UAA3D,EARP,CADJ,CAYH,CA5BD,CA8BA,cAAeP,CAAAA,aAAf,CAEA,GAAMgB,CAAAA,MAAM,CAAGG,UAAU,CAACC,MAAX,CAAkB,CAC7BH,SAAS,CAAE,CACPI,eAAe,CAAE,OADV,CAEPC,OAAO,CAAE,EAFF,CAGPC,MAAM,CAAE,MAHD,CADkB,CAAlB,CAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Input, Button } from 'react-native-elements'\nimport Icon from 'react-native-vector-icons/FontAwesome'\nimport { db } from '../firbase'\n\nconst AddChatScreen = ({navigation}) => {\n    const [input, setInput] = useState(\"\");\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Add a new chat\",\n            headerBackTitle: \"Chats\"\n        })\n    },[navigation]);\n\n    const createChat = () => {\n            db.collection('chats').add({\n            ChatName: input\n        }).then(() => {\n            navigation.goBack();\n        }).catch((error) => alert(error));\n    }\n    return (\n        <View style={styles.container}>\n        <Input placeholder=\"Enter a chat name\" \n               value={input} \n               onChangeText={(chat) => setInput(chat)} \n               onSubmitEditing={createChat}\n               leftIcon={\n                   <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"grey\"/>\n               }/>\n               <Button disabled={!input} title=\"Create new Chat\" onPress={createChat} /> \n        </View>\n    )\n}\n\nexport default AddChatScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"white\",\n        padding: 30,\n        height: \"100%\"      \n    }\n})\n"]},"metadata":{},"sourceType":"module"}