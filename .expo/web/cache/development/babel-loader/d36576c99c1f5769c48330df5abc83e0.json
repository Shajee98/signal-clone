{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/shajee/Desktop/signal-clone/Screens/AddChatScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useLayoutEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { db } from \"../firbase\";\n\nvar AddChatScreen = function AddChatScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Add a new chat\",\n      headerBackTitle: \"Chats\"\n    });\n  }, [navigation]);\n\n  var createChat = function createChat() {\n    return _regeneratorRuntime.async(function createChat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection('chats').add({\n              ChatName: input\n            }).then(function () {\n              navigation.goBack();\n            }).catch(function (error) {\n              return alert(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Enter a chat name\",\n    value: input,\n    onChangeText: function onChangeText(chat) {\n      return setInput(chat);\n    },\n    onSubmitEditing: createChat,\n    leftIcon: React.createElement(Icon, {\n      name: \"wechat\",\n      type: \"antdesign\",\n      size: 24,\n      color: \"grey\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    disabled: !input,\n    title: \"Create new Chat\",\n    onPress: createChat,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }\n  }));\n};\n\nexport default AddChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    padding: 30,\n    height: \"100%\"\n  }\n});","map":{"version":3,"sources":["/home/shajee/Desktop/signal-clone/Screens/AddChatScreen.js"],"names":["React","useLayoutEffect","useState","Input","Button","Icon","db","AddChatScreen","navigation","input","setInput","setOptions","title","headerBackTitle","createChat","collection","add","ChatName","then","goBack","catch","error","alert","styles","container","chat","StyleSheet","create","backgroundColor","padding","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;;;;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;AACA,OAAOC,IAAP;AACA,SAASC,EAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AACpC,kBAA0BN,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACAT,EAAAA,eAAe,CAAC,YAAM;AAClBO,IAAAA,UAAU,CAACG,UAAX,CAAsB;AAClBC,MAAAA,KAAK,EAAE,gBADW;AAElBC,MAAAA,eAAe,EAAE;AAFC,KAAtB;AAIH,GALc,EAKb,CAACL,UAAD,CALa,CAAf;;AAOA,MAAMM,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACTR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AAC7BC,cAAAA,QAAQ,EAAER;AADmB,aAA3B,EAEHS,IAFG,CAEE,YAAM;AACVV,cAAAA,UAAU,CAACW,MAAX;AACH,aAJK,EAIHC,KAJG,CAIG,UAACC,KAAD;AAAA,qBAAWC,KAAK,CAACD,KAAD,CAAhB;AAAA,aAJH,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAOA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,mBAAnB;AACO,IAAA,KAAK,EAAEf,KADd;AAEO,IAAA,YAAY,EAAE,sBAACgB,IAAD;AAAA,aAAUf,QAAQ,CAACe,IAAD,CAAlB;AAAA,KAFrB;AAGO,IAAA,eAAe,EAAEX,UAHxB;AAIO,IAAA,QAAQ,EACJ,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,IAAI,EAAC,WAAzB;AAAqC,MAAA,IAAI,EAAE,EAA3C;AAA+C,MAAA,KAAK,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAQO,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,CAACL,KAAnB;AAA0B,IAAA,KAAK,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAEK,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARP,CADJ;AAYH,CA5BD;;AA8BA,eAAeP,aAAf;AAEA,IAAMgB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,eAAe,EAAE,OADV;AAEPC,IAAAA,OAAO,EAAE,EAFF;AAGPC,IAAAA,MAAM,EAAE;AAHD;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Input, Button } from 'react-native-elements'\nimport Icon from 'react-native-vector-icons/FontAwesome'\nimport { db } from '../firbase'\n\nconst AddChatScreen = ({navigation}) => {\n    const [input, setInput] = useState(\"\");\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Add a new chat\",\n            headerBackTitle: \"Chats\"\n        })\n    },[navigation]);\n\n    const createChat = async () => {\n        await db.collection('chats').add({\n            ChatName: input\n        }).then(() => {\n            navigation.goBack();\n        }).catch((error) => alert(error));\n    }\n    return (\n        <View style={styles.container}>\n        <Input placeholder=\"Enter a chat name\" \n               value={input} \n               onChangeText={(chat) => setInput(chat)} \n               onSubmitEditing={createChat}\n               leftIcon={\n                   <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"grey\"/>\n               }/>\n               <Button disabled={!input} title=\"Create new Chat\" onPress={createChat} /> \n        </View>\n    )\n}\n\nexport default AddChatScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"white\",\n        padding: 30,\n        height: \"100%\"      \n    }\n})\n"]},"metadata":{},"sourceType":"module"}