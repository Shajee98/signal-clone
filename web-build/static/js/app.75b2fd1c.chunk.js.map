{"version":3,"sources":["firbase.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","components/CustomListItem.js","Screens/HomeScreen.js","Screens/AddChatScreen.js","Screens/ChatScreen.js","App.js"],"names":["app","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","replace","SignIn","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","behavior","style","styles","container","StatusBar","source","uri","width","height","position","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","raised","title","onPress","containerStyle","button","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop","RegisterScreen","name","setName","imageUrl","setImageUrl","useLayoutEffect","setOptions","headerBackTitle","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","h3","marginBottom","CustomListItem","id","chatName","enterChat","chatMessages","setchatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","key","bottomDivider","rounded","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","signOut","snapshots","headerStyle","headerTitleStyle","color","headerTintColor","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","flexDirection","marginRight","AntDesign","size","SimpleLineIcons","SafeAreaView","ScrollView","ChatName","AddChatScreen","input","setInput","createChat","add","goBack","chat","leftIcon","disabled","ChatScreen","route","messages","setMessages","headerTitleAlign","headerTitle","Text","params","Ionicons","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","reciever","bottom","right","recieverText","sender","senderText","senderName","footer","TextInput","textInput","paddingBottom","alignSelf","borderRadius","maxWidth","margin","left","paddingRight","fontSize","Stack","createStackNavigator","globalScreenOptions","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.75b2fd1c.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDbb9P554-t1eiBC3ADIviSXL_UUFF1EsY\",\n    authDomain: \"signal-clone-8a075.firebaseapp.com\",\n    projectId: \"signal-clone-8a075\",\n    storageBucket: \"signal-clone-8a075.appspot.com\",\n    messagingSenderId: \"47279117775\",\n    appId: \"1:47279117775:web:95f0e6338241c0b6bdaeba\"\n  };\n\n  let app;\n\n//   if (firebase.apps.length === 0)\n//   {\n      app = firebase.initializeApp(firebaseConfig);\n//   }\n//   else\n//   {\n    //   app = firebase.app();\n//   }\n\n  const db = app.firestore();\n  const auth = app.auth();\n\n  export {db , auth, firebase};","import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport {StyleSheet, View, KeyboardAvoidingView} from 'react-native';\nimport {Button, Image, Input} from 'react-native-elements';\nimport {auth, firebase} from '../firbase';\n\n\nconst LoginScreen = ({navigation}) => {\n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n    \nuseEffect(() => {\n  const unsubscribe = firebase.auth().onAuthStateChanged((authUser) => {\n      if (authUser)\n      {\n        navigation.replace('Home')\n      }\n  });\n   return unsubscribe;\n},[]);\n\n    const SignIn = () => {\n       firebase.auth().signInWithEmailAndPassword(email, password).catch((error) => alert(error));\n    };\n    return (\n        <KeyboardAvoidingView behavior={'padding'} style={styles.container}>\n            <StatusBar style='light'/>\n            <Image source={{\n                uri: \"https://blog.mozilla.org/internetcitizen/files/2018/08/signal-logo.png\",\n            }}\n            style={{width: 200, height: 200, position: 'relative'}}\n            />\n            <View style={styles.inputContainer}>\n                <Input \n                placeholder=\"Email\" \n                autoFocus \n                type=\"email\" \n                value={email} \n                onChangeText={(text) => setEmail(text)}\n                />\n                <Input \n                placeholder=\"Password\" \n                secureTextEntry \n                type=\"password\" \n                value={password} \n                onChangeText={(text) => setPassword(text)}\n                onSubmitEditing={SignIn}\n                />\n            </View>\n            <Button raised title='Login' onPress={SignIn} containerStyle={styles.button}/>\n            <Button raised title='Register' onPress={() => navigation.navigate('Register')} type='outline' containerStyle={styles.button}/>\n\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default LoginScreen\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 10,\n      backgroundColor: 'white'\n    },\n    inputContainer: {\n       width: 300,\n       marginTop: -150\n    },\n    button: {\n     width: 200,\n     marginTop: 10\n    }\n});","import { StatusBar } from 'expo-status-bar'\nimport React, { useEffect, useLayoutEffect, useState } from 'react'\nimport { KeyboardAvoidingView, View, StyleSheet, Platform} from 'react-native'\nimport { Button, Input, Text } from 'react-native-elements'\nimport {auth, firebase} from '../firbase';\n\nconst RegisterScreen = ({navigation}) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [imageUrl, setImageUrl] = useState('');\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerBackTitle: 'Back to Login',\n        });\n    },[navigation]);\n    \n    const register = () => {\n      firebase.auth().createUserWithEmailAndPassword(email,password)\n      .then(authUser => {\n          authUser.user.updateProfile({\n              displayName: name,\n              photoURL: imageUrl || \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\"\n          });\n      }).catch((error) => alert(error.message))\n    }\n    return (\n        <KeyboardAvoidingView behavior={'padding'} style={styles.container}>\n            <StatusBar style=\"light\"/>\n            <Text h3 style={{marginBottom: 50}}>Create a Signal Account</Text>\n            <View style={styles.inputContainer}>\n                <Input placeholder=\"Full Name\" \n                autoFocus \n                type='text' \n                value={name} \n                onChangeText={(text) => setName(text)}/>\n                <Input placeholder=\"Email\" \n                type='email' \n                value={email} \n                onChangeText={(text) => setEmail(text)}/>\n                <Input placeholder=\"Password\" \n                secureTextEntry\n                type='password' \n                value={password} \n                onChangeText={(text) => setPassword(text)}/>\n                <Input placeholder=\"Profile Picture URL (Optional)\"\n                type='text' \n                value={imageUrl} \n                onChangeText={(text) => setImageUrl(text)}\n                onSubmitEditing={register}/>\n            </View>\n            <Button \n             raised\n             containerStyle={styles.button}\n             title=\"Register\"\n             onPress={register}\n             />\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default RegisterScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 10,\n        backgroundColor: 'white'\n    },\n    button: {\n      width: 200,\n      marginTop: 10,\n    //   marginBottom: -100\n    },\n    inputContainer: {\n       width: 300\n    }\n})\n","import React, { useEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { ListItem, Avatar } from 'react-native-elements'\nimport { db } from '../firbase';\n\nconst CustomListItem = ({id, chatName, enterChat}) => {\n    const [chatMessages, setchatMessages] = useState([]);\n\n    useEffect(() => {\n        const unsubscribe = db.collection(\"chats\")\n                            .doc(id)\n                            .collection(\"messages\")\n                            .orderBy(\"timestamp\",\"desc\")\n                            .onSnapshot((snapshot) => setchatMessages(snapshot.docs.map((doc) => \n                                doc.data())));\n                      return unsubscribe;\n    });\n    return (\n        <ListItem key={id}\n                  onPress={() => enterChat(id,chatName)} \n                  key={id} \n                  bottomDivider>\n            <Avatar rounded \n                    source={{uri: chatMessages?.[0]?.photoURL || \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\",}} \n                    />\n            <ListItem.Content>\n                <ListItem.Title style={{fontWeight: \"800\"}}>{chatName}</ListItem.Title>\n                <ListItem.Subtitle \n                numberOfLines={1} \n                ellipsizeMode= \"tail\">\n                    {chatMessages?.[0]?.displayName}: {chatMessages?.[0]?.message}\n                    </ListItem.Subtitle>\n            </ListItem.Content>\n        </ListItem>\n    );\n};\n\nexport default CustomListItem\n\nconst styles = StyleSheet.create({})\n","import React, { useEffect, useLayoutEffect, useState } from 'react'\nimport { StyleSheet, View, ScrollView, SafeAreaView, TouchableOpacity } from 'react-native'\nimport CustomListItem from '../components/CustomListItem'\nimport { Avatar } from 'react-native-elements'\nimport { AntDesign, SimpleLineIcons } from '@expo/vector-icons'\nimport {auth, firebase, db} from '../firbase';\n\n\nconst HomeScreen = ({navigation}) => {\n    const [chats, setChats] = useState([]);\n\n    const signOut = () => {\n        firebase.auth().signOut().then(() => {\n            navigation.replace(\"Login\");\n        });\n    };\n\n    useEffect(() => {\n        const unsubscribe = db.collection('chats').onSnapshot(snapshots => (\n            setChats(snapshots.docs.map(doc => ({\n                id: doc.id,\n                data: doc.data()\n            })))));\n            return unsubscribe;\n    },[]);\n\n\n\n    useLayoutEffect(() => {\n       navigation.setOptions\n       ({\n           title: 'Signal',\n           headerStyle: {backgroundColor: \"#fff\"},\n           headerTitleStyle: {color: \"black\"},\n           headerTintColor: \"black\",\n           headerLeft: () => \n           (\n           <View style={{marginLeft: 20}}>\n               <TouchableOpacity onPress={signOut} activeOpacity={0.5}>\n               <Avatar rounded source={{uri: firebase.auth().currentUser?.photoURL}}/>\n               </TouchableOpacity>           \n           </View>\n           ),\n            headerRight: () => \n            (\n              <View \n              style={{flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              width: 80,\n              marginRight: 20}}>\n              <TouchableOpacity activeOpacity={0.5}>\n              <AntDesign name=\"camerao\" size={24} color=\"black\"/>\n              </TouchableOpacity>\n              <TouchableOpacity activeOpacity={0.5} onPress={() => {navigation.navigate(\"AddChat\")}}>\n              <SimpleLineIcons name=\"pencil\" size={24} color=\"black\"/>\n              </TouchableOpacity>    \n              </View>\n            )\n        });\n    },[navigation])\n\n    const enterChat = (id, chatName) => {\n         navigation.navigate('Chat', {\n             id, \n             chatName\n         })\n    }\n    return (\n        <SafeAreaView>\n            <ScrollView style={styles.container}>\n                {chats.map(({id, data: {ChatName}}) => (\n                   <CustomListItem key={id} id={id} chatName={ChatName} enterChat={enterChat}/>\n                ))}\n            </ScrollView>\n        </SafeAreaView>\n    )\n}\n\nexport default HomeScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        height: \"100%\"\n    }\n})\n","import React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Input, Button } from 'react-native-elements'\nimport Icon from 'react-native-vector-icons/FontAwesome'\nimport { db } from '../firbase'\n\nconst AddChatScreen = ({navigation}) => {\n    const [input, setInput] = useState(\"\");\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Add a new chat\",\n            headerBackTitle: \"Chats\"\n        })\n    },[navigation]);\n\n    const createChat = () => {\n            db.collection('chats').add({\n            ChatName: input\n        }).then(() => {\n            navigation.goBack();\n        }).catch((error) => alert(error));\n    }\n    return (\n        <View style={styles.container}>\n        <Input placeholder=\"Enter a chat name\" \n               value={input} \n               onChangeText={(chat) => setInput(chat)} \n               onSubmitEditing={createChat}\n               leftIcon={\n                   <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"grey\"/>\n               }/>\n               <Button disabled={!input} title=\"Create new Chat\" onPress={createChat} /> \n        </View>\n    )\n}\n\nexport default AddChatScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"white\",\n        padding: 30,\n        height: \"100%\"      \n    }\n})\n","import React, { useLayoutEffect, useState } from 'react'\nimport { Keyboard, KeyboardAvoidingView, Platform, StyleSheet, Text, TextInput, View } from 'react-native'\nimport { Avatar } from 'react-native-elements'\nimport { TouchableOpacity, TouchableWithoutFeedback } from 'react-native';\nimport {AntDesign, FontAwesome, Ionicons} from '@expo/vector-icons'\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport {auth, db, firebase} from '../firbase';\n\n\nconst ChatScreen = ({navigation , route}) => {\n\n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: 'Chat',\n            headerBackTitle: false,\n            headerTitleAlign: 'left',\n            headerTitle: () => (\n                <View style={{flexDirection:\"row\", alignItems: 'center'}}>\n                    <Avatar rounded source={{uri: messages[0]?.data.photoURL,}} />\n                    <Text\n                    style={{color: \"white\", marginLeft: 10, fontWeight: \"700\"}}\n                    >{route.params.chatName}</Text>\n                </View>\n            ),\n            headerLeft: () => (\n              <TouchableOpacity \n              onPress={navigation.goBack}\n              style={{marginLeft: 10}}>\n                <AntDesign name=\"arrowleft\" size={24} color=\"white\"/>\n              </TouchableOpacity>\n            ),\n            headerRight: () => (\n                <View\n                style={{flexDirection:\"row\",\n                        justifyContent: \"space-between\", \n                        width: 80, \n                        marginRight: 20}}>\n                <TouchableOpacity>\n                    <FontAwesome name=\"video-camera\" size={24} color=\"white\"/>\n                </TouchableOpacity>\n                <TouchableOpacity>\n                    <Ionicons name=\"call\" size={24} color=\"white\"/>\n                </TouchableOpacity>\n                </View>\n            )\n        });\n    },[navigation,messages]);\n\n    const sendMessage = () => {\n        Keyboard.dismiss();\n            db.collection('chats').doc(route.params.id).collection('messages').add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            message: input,\n            displayName: auth.currentUser.displayName,\n            email: auth.currentUser.email,\n            photoURL: auth.currentUser.photoURL\n        });\n        setInput(\"\");\n    \n    };\n    \n    useLayoutEffect(() => {\n      const unsubscribe = db.collection(\"chats\")\n                          .doc(route.params.id)\n                          .collection(\"messages\")\n                          .orderBy(\"timestamp\", \"desc\")\n                          .onSnapshot((snapshot) => setMessages(\n                              snapshot.docs.map((doc) => ({\n                                 id: doc.id,\n                                 data: doc.data()\n                              }))\n                          ));\n                          return unsubscribe;\n    },[route])\n\n    return (\n        <SafeAreaView style={{flex: 1, backgroundColor: \"white\"}}>\n            <StatusBar style=\"light\" />\n            <KeyboardAvoidingView\n              behavior={Platform.OS === \"android\" ? \"padding\":\"height\"}\n              keyboardVerticalOffset={-500}\n              style={styles.container}>\n                  <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                  <>\n                <ScrollView>\n                     {messages.map(({id,data}) => \n                         data.email === auth.currentUser.email ? (\n                             <View key={id} style={styles.reciever}>\n                                 <Avatar rounded \n                                         size={30} \n                                         bottom={-15} \n                                         right={-5} \n                                         position=\"absolute\"\n                                         containerStyle={{\n                                             position: \"absolute\",\n                                             bottom: -15,\n                                             right: -5\n                                         }}\n                                         source={{uri: data.photoURL}}/>\n                                 <Text style={styles.recieverText}>{data.message}</Text>\n                             </View>\n                         ): \n                         (\n                             <View key={id} style={styles.sender}>\n                                 <Avatar \n                                 rounded \n                                 size={30} \n                                 bottom={-15} \n                                 right={-5} \n                                 position=\"absolute\"\n                                 containerStyle={{\n                                     position: \"absolute\",\n                                     bottom: -15,\n                                     right: -5\n                                 }}\n                                 source={{uri: data.photoURL}}/>\n                                 <Text style={styles.senderText}>{data.message}</Text>\n                                 <Text style={styles.senderName}>{data.displayName}</Text>\n                             </View>\n                         )\n                     )}\n                </ScrollView>\n                <View style={styles.footer}>\n                    <TextInput placeholder=\"Enter Message\" \n                               value={input}  \n                               style={styles.textInput} \n                               onChangeText={(text) => setInput(text)}\n                               onSubmitEditing={sendMessage}/>\n                    <TouchableOpacity disabled={!input} activeOpacity={0.5} onPress={sendMessage}>\n                               <Ionicons name=\"send\" size={24} color=\"#2B68E6\"/>\n                    </TouchableOpacity>           \n                </View>\n                </>\n                </TouchableWithoutFeedback>\n              </KeyboardAvoidingView>\n        </SafeAreaView>\n    )\n}\n\nexport default ChatScreen\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingBottom: -20\n    },\n    reciever: {\n      padding: 15,\n      backgroundColor: \"#ECECEC\",\n      alignSelf: \"flex-end\",\n      borderRadius: 20,\n      marginRight: 15,\n      marginBottom: 20,\n      maxWidth: \"80%\",\n      position: \"relative\"\n    },\n    sender: {\n      padding: 15,\n      backgroundColor: \"#0000FF\",\n      alignSelf: \"flex-start\",\n      borderRadius: 20,\n      margin: 15,\n      maxWidth: \"80%\",\n      position: \"relative\"\n    },\n    senderText: {\n      color: \"white\",\n      fontWeight: \"500\",\n      marginLeft: 10,\n      marginBottom: 15\n    },\n    recieverText: {\n      color: \"black\",\n      marginLeft: 10,\n      fontWeight: \"500\"\n    },  \n    senderName: {\n        left: 10,\n        paddingRight: 10,\n        fontSize: 10,\n        color: \"white\"\n    },\n    footer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      width: \"100%\",\n      padding: 10\n        },\n    textInput: {\n      bottom: 0,\n      height: 40,\n      flex: 1,\n      marginRight: 15,\n      backgroundColor: \"#ECECEC\",\n      padding: 10,\n      color: \"grey\",\n      borderRadius: 30\n    }\n})\n","import 'react-native-gesture-handler';\nimport React from 'react';\nimport { StyleSheet} from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack'\nimport LoginScreen from './Screens/LoginScreen';\nimport RegisterScreen from './Screens/RegisterScreen';\nimport HomeScreen from './Screens/HomeScreen';\nimport AddChatScreen from './Screens/AddChatScreen';\nimport ChatScreen from './Screens/ChatScreen';\n\nconst Stack = createStackNavigator();\nconst globalScreenOptions = {\n  headerStyle: {backgroundColor: 'blue'},\n  headerTitleStyle: {color: 'white', alignSelf: 'center'},\n  headerTintColor: 'white',\n  headerTitleAlign: 'center'\n}\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator \n      //initialRouteName=\"Home\" \n      screenOptions={globalScreenOptions}>\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\n      <Stack.Screen name=\"Home\" component={HomeScreen} />\n      <Stack.Screen name=\"AddChat\" component={AddChatScreen} />\n      <Stack.Screen name=\"Chat\" component={ChatScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"sourceRoot":""}